{"version":3,"sources":["components/Header/Header.js","components/SearchButton/SearchButton.js","components/Stocks/Stocks.js","components/Details/Details.js","components/Footer/Footer.js","App.js","serviceWorker.js","theme-context.js","context.js","index.js"],"names":["Header","className","to","src","alt","React","Component","SearchButton","onSubmit","this","props","serciTerm","type","id","name","placeholder","Stocks","info","symbol","day","openValue","highValue","lowValue","data","x","y","mode","marker","color","data1","closeValue","data2","data3","data4","volume","join","layout","paper_bgcolor","plot_bgcolor","font","title","text","slice","family","size","textTransform","fontWeight","legend","orientation","traceorder","autosize","style","width","height","Details","Footer","Date","getFullYear","API_KEY","App","state","query","sector","industry","country","address","employees","earningPerShare","profitMargin","description","open","high","low","price","latestTradingDay","previousClose","lastVolumeDay","actSymbol","error","handleSubmit","event","infos","symbols","days","openValues","highValues","lowValues","closeValues","volumes","names","sectors","industrys","countrys","addresss","employeess","earningPerShares","profitMargins","descriptions","opens","highs","lows","prices","latestTradingDays","previousCloses","lastVolumeDays","preventDefault","target","serciValue","value","requests","map","url","fetch","Promise","all","then","res","r","json","results","key","push","Name","Sector","Industry","Country","Address","FullTimeEmployees","RevenuePerShareTTM","ProfitMargin","Description","setState","listOfCompanies","actSymbols","i","length","exact","path","act","uuid","pathname","textAlign","textDecoration","marginTop","Boolean","window","location","hostname","match","themes","dark","backgroundColor","light","initialState","theme","toggle","ThemeContext","createContext","ThemeProvider","children","useState","setDark","useEffect","isDark","localStorage","getItem","Provider","setItem","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.40ea3c81.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                            <div>\r\n                                <Link to=\"/\"><img src={\"nyse-logo.svg\"} alt=\"logo\"  /></Link>\r\n                                <p>The New York Stock Exchange</p>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </header>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport './SearchButton.css';\r\n\r\n\r\nclass SearchButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <form\r\n                    onSubmit={this.props.serciTerm}\r\n                    className=\"form-inline\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input\"\r\n                        name=\"serciValue\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search\" />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchButton;","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport './Stocks.css'\r\n\r\nclass Stocks extends React.Component {\r\n    render() {\r\n        let { info, symbol, day, openValue, highValue, lowValue, closeValue, volume } = this.props;\r\n\r\n        let data = {\r\n            x: day,\r\n            y: highValue,\r\n            type: 'scatter',\r\n            mode: 'lines',\r\n            marker: {color: 'yellow'},\r\n            name: 'high'\r\n            };\r\n\r\n        let data1 = {\r\n                x: day,\r\n                y: closeValue,\r\n                type: 'scatter',\r\n                mode: 'lines',\r\n                marker: {color: 'blue'},\r\n                name: 'close'\r\n            };\r\n\r\n        let data2 = {\r\n                x: day,\r\n                y: lowValue,\r\n                type: 'scatter',\r\n                mode: 'lines',\r\n                marker: {color: 'red'},\r\n                name: 'low'\r\n            };\r\n\r\n        let data3 = {\r\n            x: day,\r\n            y: openValue,\r\n            type: 'scatter',\r\n            mode: 'lines',\r\n            marker: {color: 'green'},\r\n            name: 'open'\r\n            };\r\n\r\n        let data4 = {\r\n            x: day,\r\n            y: volume,\r\n            type: 'bar',\r\n            marker: {color: 'green'},\r\n            name: 'open'\r\n            };\r\n\r\n        return (\r\n            <div className=\"container stocks\">\r\n                <div className=\"details-page\"><h1>Details</h1></div>\r\n                <p className=\"details-page-p\">{info.join(' - ')}</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                        <Plot\r\n                            data={[data, data1, data2, data3]}\r\n                            layout={{ paper_bgcolor: \"rgba(0,0,0,0)\", plot_bgcolor: 'rgba(0,0,0,0)',\r\n                                font: {color: 'white'},\r\n                                title: {text: '' + symbol.slice(0, 1), font: {\r\n                                        family: 'Noto Sans JP, sans-serif',\r\n                                        color: 'black',\r\n                                        size: 23,\r\n                                        textTransform: 'uppercase !important' ,\r\n                                        fontWeight: 800\r\n                                    }},\r\n                                legend: { orientation: 'h', traceorder: 'reversed'}, autosize: true}}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 col-xl-12\">\r\n                            <Plot\r\n                                data={[data4]}\r\n                                layout={{ paper_bgcolor: \"rgba(0,0,0,0)\", plot_bgcolor: 'rgba(0,0,0,0)',\r\n                                    font: {color: 'white'},\r\n                                    title: {text: 'Volumes', font: {\r\n                                            family: 'Noto Sans JP, sans-serif',\r\n                                            color: 'black',\r\n                                            size: 23,\r\n                                            fontWeight: 800\r\n                                        }}, autosize: true } }\r\n                                style={{ width: '100%', height: '100%' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stocks;","import React from 'react';\r\nimport Stocks from \"../Stocks/Stocks\";\r\nimport './Details.css';\r\n\r\nclass Details extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <Stocks\r\n                info={this.props.info}\r\n                symbol={this.props.symbol}\r\n                day={this.props.day}\r\n                openValue={this.props.openValue}\r\n                highValue={this.props.highValue}\r\n                lowValue={this.props.lowValue}\r\n                closeValue={this.props.closeValue}\r\n                volume={this.props.volume}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React from \"react\";\r\nimport './Footer.css'\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>Made by <div>&nbsp;</div><span>Matei Mircea</span><div>&nbsp;</div> @ {new Date().getFullYear()}</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from \"./components/Header/Header\";\r\nimport SearchButton from \"./components/SearchButton/SearchButton\";\r\nimport Details from './components/Details/Details';\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nimport { v4 as uuid } from 'uuid';\r\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n//let RANDOM_USER ='https://api.randomuser.me/';\r\nlet API_KEY = 'MA1OXYPUVUB5V340';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        query: [],\r\n        info: [],\r\n        symbol: [],\r\n\r\n        day: [],\r\n        openValue: [],\r\n        highValue: [],\r\n        lowValue: [],\r\n        closeValue: [],\r\n        volume: [],\r\n\r\n        name: [],\r\n        sector: [],\r\n        industry: [],\r\n        country: [],\r\n        address: [],\r\n        employees: [],\r\n        earningPerShare: [],\r\n        profitMargin: [],\r\n        description: [],\r\n\r\n        open: [],\r\n        high: [],\r\n        low: [],\r\n        price: [],\r\n        latestTradingDay: [],\r\n        previousClose: [],\r\n        lastVolumeDay: [],\r\n\r\n        actSymbol: [],\r\n        error: \"Please enter a value !!!\"\r\n    };\r\n\r\n    handleSubmit =  (event) => {\r\n        let infos = [];\r\n        let symbols = [];\r\n\r\n        let days = [];\r\n        let openValues = [];\r\n        let highValues =[];\r\n        let lowValues = [];\r\n        let closeValues = [];\r\n        let volumes =[];\r\n\r\n        let names = [];\r\n        let sectors = [];\r\n        let industrys = [];\r\n        let countrys = [];\r\n        let addresss = [];\r\n        let employeess = [];\r\n        let earningPerShares = [];\r\n        let profitMargins = [];\r\n        let descriptions = [];\r\n\r\n        let opens = [];\r\n        let highs = [];\r\n        let lows = [];\r\n        let prices = [];\r\n        let latestTradingDays = [];\r\n        let previousCloses = [];\r\n        let lastVolumeDays = [];\r\n\r\n\r\n        event.preventDefault();\r\n        let query = event.target.serciValue.value;\r\n        let URL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${query}&apikey=${API_KEY}`;\r\n        let URL2 = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${query}&apikey=${API_KEY}`;\r\n        let URL3 = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${query}&apikey=${API_KEY}`;\r\n        let URLS = [URL, URL2, URL3];\r\n        let requests = URLS.map( url => fetch(url));\r\n        Promise.all( requests)\r\n            .then( res => Promise.all( res.map( r => r.json()) ))\r\n            .then( results => {\r\n                let data = results[0];\r\n                let data1 = results[1];\r\n                let data2 = results[2];\r\n\r\n                for (let key in data['Meta Data']) {\r\n                    symbols.push(data['Meta Data']['2. Symbol']);\r\n                    infos.push(data['Meta Data'][key]);\r\n                }\r\n                for (let key in data['Time Series (Daily)']) {\r\n                    days.push(key);\r\n                    openValues.push(data['Time Series (Daily)'][key]['1. open']);\r\n                    highValues.push(data['Time Series (Daily)'][key]['2. high']);\r\n                    lowValues.push(data['Time Series (Daily)'][key]['3. low']);\r\n                    closeValues.push(data['Time Series (Daily)'][key]['4. close']);\r\n                    volumes.push(data['Time Series (Daily)'][key]['5. volume']);\r\n                }\r\n                for (let key in data1) {\r\n                    names.push(data1.Name);\r\n                    sectors.push(data1.Sector);\r\n                    industrys.push(data1.Industry);\r\n                    countrys.push(data1.Country);\r\n                    addresss.push(data1.Address);\r\n                    employeess.push(data1.FullTimeEmployees);\r\n                    earningPerShares.push(data1.RevenuePerShareTTM);\r\n                    profitMargins.push(data1.ProfitMargin);\r\n                    descriptions.push(data1.Description);\r\n                }\r\n                for (let key in data2[\"Global Quote\"]) {\r\n                    opens.push(data2[\"Global Quote\"]['02. open']);\r\n                    highs.push(data2[\"Global Quote\"]['03. high']);\r\n                    lows.push(data2[\"Global Quote\"]['04. low']);\r\n                    prices.push(data2[\"Global Quote\"]['05. price']);\r\n                    lastVolumeDays.push(data2[\"Global Quote\"]['06. volume']);\r\n                    latestTradingDays.push(data2[\"Global Quote\"]['07. latest trading day']);\r\n                    previousCloses.push(data2[\"Global Quote\"]['08. previous close']);\r\n                }\r\n\r\n                if (!query) {\r\n                    this.setState({error: \"Please enter a value !!!\" });\r\n                } else {\r\n                this.setState({\r\n                    query: query,\r\n                    info: infos,\r\n                    symbol: symbols,\r\n                    day: days,\r\n                    openValue: openValues,\r\n                    highValue: highValues,\r\n                    lowValue: lowValues,\r\n                    closeValue: closeValues,\r\n                    volume: volumes,\r\n                    name: names,\r\n                    sector: sectors,\r\n                    industry: industrys,\r\n                    country: countrys,\r\n                    address: addresss,\r\n                    employees: employeess,\r\n                    earningPerShare: earningPerShares,\r\n                    profitMargin: profitMargins,\r\n                    description: descriptions,\r\n                    open: opens,\r\n                    high: highs,\r\n                    low: lows,\r\n                    price: prices,\r\n                    latestTradingDay: latestTradingDays,\r\n                    previousClose: previousCloses,\r\n                    lastVolumeDay: lastVolumeDays,\r\n                    error: null\r\n                });\r\n                }\r\n            });\r\n\r\n    };\r\n\r\n    listOfCompanies = () => {\r\n        fetch('https://pkgstore.datahub.io/JohnSnowLabs/list-of-companies-in-the-new-york-stock-exchange/list-of-companies-in-the-new-york-stock-exchange-csv_json/data/0026360bbb7be2840f71db501b9bdede/list-of-companies-in-the-new-york-stock-exchange-csv_json.json')\r\n            .then( res => res.json())\r\n            .then( res => {\r\n                let actSymbols = [];\r\n                for (let i = 0; i < res.length; i++){\r\n                    actSymbols.push(res[i][\"ACT_Symbol\"]);\r\n                }\r\n                //console.log(actSymbols);\r\n                this.setState({ actSymbol: actSymbols });\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.listOfCompanies();\r\n    }\r\n\r\n    render() {\r\n        let {symbol, name, industry, address, employees, earningPerShare, profitMargin, latestTradingDay,  price, actSymbol, description, sector } = this.state;\r\n\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <>\r\n                        <Header />\r\n                        <Route exact path='/'>\r\n                            <SearchButton serciTerm={this.handleSubmit} />\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div id=\"mycompaniez\" className=\"col-sm-4 col-md-2 mb-5 items\">\r\n                                        <div className=\"text-bolduit\"><h2>Symbols</h2></div>\r\n                                        <ul>\r\n                                            {actSymbol.map( act => {\r\n                                                return (\r\n                                                    <li key={uuid()} >{act}</li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    { this.state.error ?  <div className=\" col-sm-4 col-md-10 d-flex justify-content-center\" > <h1>{this.state.error}</h1> </div> : <>\r\n                                        <div className=\" col-sm-8 col-md-4 items\">\r\n                                            <div className=\"text-bolduit\"><h2>Overview</h2></div>\r\n                                            <p><span className=\"simbol text-bolduit\">{symbol[0]} -</span> <span> {name[0]}</span></p>\r\n                                            <p><span className=\"text-bolduit\">Sector:</span> {sector[0]} - {industry[0]}</p>\r\n                                            <p><span className=\"text-bolduit\">Adress:</span> {address[0]}</p>\r\n                                            <p><span className=\"text-bolduit\">Number of employees:</span> {employees[0]}</p>\r\n                                            <p><span className=\"text-bolduit\">Earning/Profit per share:</span> {earningPerShare[0]} / {profitMargin[0]}</p>\r\n                                            <p><span className=\"text-bolduit\">{latestTradingDay[0]} was the last trading day and the price was {price[0]}</span></p>\r\n                                            <Link to={{\r\n                                                pathname: `/${symbol[0]}`\r\n                                            }} >\r\n                                                <button className=\"btn btn-outline-primary main-page-button\">Details</button>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12 col-md-6 items\">\r\n                                            <div><h2>Description</h2></div>\r\n                                            <p className=\"text-bolduit descriere\">{description[0]}</p>\r\n                                        </div>  </>  }\r\n\r\n\r\n                            </div>\r\n                                <p style={{textAlign: 'center', color: 'rgb(153, 153, 153)', textDecoration: 'underline', marginTop: '2rem'}}>API Limitations: 5 request/minute, 500 requests/day</p>\r\n                            </div>\r\n                        </Route>\r\n\r\n                                <Route exact path=\"/:symbol\">\r\n                                    <Details\r\n                                        info={this.state.info}\r\n                                        symbol={this.state.symbol}\r\n                                        day={this.state.day}\r\n                                        openValue={this.state.openValue}\r\n                                        highValue={this.state.highValue}\r\n                                        lowValue={this.state.lowValue}\r\n                                        closeValue={this.state.closeValue}\r\n                                        volume={this.state.volume}\r\n                                    />\r\n                                </Route>\r\n\r\n                        <Footer />\r\n                    </>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const themes = {\r\n    dark: {\r\n        backgroundColor: 'black',\r\n        color: 'white'\r\n    },\r\n    light: {\r\n        backgroundColor: 'white',\r\n        color: 'black'\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    dark: false,\r\n    theme: themes.light,\r\n    toggle: () => {}\r\n}\r\n\r\nexport { themes, initialState };\r\n","import React from 'react'\r\nimport { themes, initialState} from \"./theme-context\";\r\n\r\nconst ThemeContext = React.createContext(initialState)\r\n\r\nfunction ThemeProvider({ children }) {\r\n    const [dark, setDark] = React.useState(false) // Default theme is light\r\n\r\n    // On mount, read the preferred theme from the persistence\r\n    React.useEffect(() => {\r\n        const isDark = localStorage.getItem('dark') === 'true'\r\n        setDark(isDark)\r\n    }, [dark])\r\n\r\n    // To toggle between dark and light modes\r\n    const toggle = () => {\r\n        const isDark = !dark\r\n        localStorage.setItem('dark', JSON.stringify(isDark))\r\n        setDark(isDark)\r\n    }\r\n\r\n    const theme = dark ? themes.dark : themes.light\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, dark, toggle }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ThemeProvider } from './context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}